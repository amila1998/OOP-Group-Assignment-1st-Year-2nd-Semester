/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2021-05-24 04:58:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class resetPassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"styles/Default.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"styles/resetpassword.css\">\r\n");
      out.write("<title>Reset Password</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center><h1 class=\"Ttxtstyle\">Reset Password</h1>\r\n");
      out.write("<section style=\"width=100%;\" class=\"logingbody\">\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"formStyle3\">\r\n");
      out.write("		\r\n");
      out.write("		<form action=\"resetpassword\" method=\"POST\" >\r\n");
      out.write("			<fieldset>\r\n");
      out.write("			<div class=\"col-50\">\r\n");
      out.write("	");

		
		String email = request.getParameter("email");
		
	
      out.write("\r\n");
      out.write("			<label for=\"EmailAddress\">Email Address :</label>\r\n");
      out.write("			<input type=\"email\" id=\"emailAdd\" name=\"email\" pattern=\"[a-zA-Z0-9._%+-]+@[a-z0-9]+\\.[a-z]{2,3}\" value=\"");
      out.print( email );
      out.write("\" readonly>	\r\n");
      out.write("			<label for=\"Password\">New Password :</label>\r\n");
      out.write("			<input type=\"password\" id=\"pwd\" name=\"npwd\" placeholder=\"enter your new password here\"  required >\r\n");
      out.write("			<input type=\"checkbox\" onclick=\"visiblepass()\">:  Show Password\r\n");
      out.write("\r\n");
      out.write("				<script>\r\n");
      out.write("				function visiblepass() {\r\n");
      out.write("				  var x = document.getElementById(\"npwd\");\r\n");
      out.write("				  if (x.type === \"password\") {\r\n");
      out.write("				    x.type = \"text\";\r\n");
      out.write("				  } else {\r\n");
      out.write("				    x.type = \"password\";\r\n");
      out.write("				  }\r\n");
      out.write("				}\r\n");
      out.write("				</script>\r\n");
      out.write("			 <br><br>\r\n");
      out.write("			<label for=\"rePassword\">Re-enter Password :</label>\r\n");
      out.write("			<input type=\"password\" id=\"rpwd\" name=\"rpwd\" placeholder=\"re-enter your password here\" required>\r\n");
      out.write("			<input type=\"checkbox\" onclick=\"visiblepassw()\">:  Show Password\r\n");
      out.write("\r\n");
      out.write("				<script>\r\n");
      out.write("				function visiblepassw() {\r\n");
      out.write("				  var x = document.getElementById(\"rpwd\");\r\n");
      out.write("				  if (x.type === \"password\") {\r\n");
      out.write("				    x.type = \"text\";\r\n");
      out.write("				  } else {\r\n");
      out.write("				    x.type = \"password\";\r\n");
      out.write("				  }\r\n");
      out.write("				}\r\n");
      out.write("				</script>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			 <br><br>\r\n");
      out.write("			<input type=\"checkbox\" id=\"policy\" name=\"policy\" required onclick =\"enableButton2()\">:  I am not a Robot\r\n");
      out.write("			<br><br>\r\n");
      out.write("			<input name=\"register\" class=\"Btn1\" type=\"submit\" id=\"btn2\" name=\"btn2\"  value=\"submit\" disable><br>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			<script>function enableButton2(){\r\n");
      out.write("\r\n");
      out.write("						if(document.getElementById(\"policy\").checked){\r\n");
      out.write("							if(document.getElementById(\"pwd\").value != document.getElementById(\"rpwd\").value ){\r\n");
      out.write("								\r\n");
      out.write("								alert(\"password are mismatched!!\");\r\n");
      out.write("								document.getElementById(\"policy\").checked = false;\r\n");
      out.write("							}\r\n");
      out.write("							else{					\r\n");
      out.write("							}\r\n");
      out.write("				\r\n");
      out.write("							document.getElementById(\"btn2\").disabled= false;//this means submit button is enabled\r\n");
      out.write("						}\r\n");
      out.write("						else{\r\n");
      out.write("							document.getElementById(\"btn2\").disabled= true;\r\n");
      out.write("						\r\n");
      out.write("						}\r\n");
      out.write("					} \r\n");
      out.write("		</script>\r\n");
      out.write("		</div>\r\n");
      out.write("		</fieldset>\r\n");
      out.write("		</form>\r\n");
      out.write("		\r\n");
      out.write("		</center>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
